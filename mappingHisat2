#!/bin/bash

# ----------------QSUB Parameters----------------- #
##choose queue
####PBS -q
##list - node are nodes: ppn are cpus per node: walltime=walltime
#PBS -l nodes=1:ppn=20,mem=10gb,walltime=03:00:00:00
##email
#PBS -M dys0004@tigermail.auburn.edu
##send email abort; begin; end
#PBS -m ae
##job name
#PBS -N 31st_Dec_2018
##combine standard out and standard error
#PBS -j oe
# ----------------Load Modules-------------------- #
module load hisat/2.1.0
module load samtools/1.6
module load stringtie/1.3.3b
module load gffread/2
module load gffcompare/1
module load cufflinks/2.2.1
module load python/2.7.12 

## Remove any folders with the same name as the folder you are creating (to avoid errors in future)


## Make working folder and move into that folder
mkdir /scratch/ReptileTrinityDYS/RNAmaleStress/31st_Dec_V1
cd /scratch/ReptileTrinityDYS/RNAmaleStress/31st_Dec_V1

## Copy files and move into working directory
# Cleaned and paired .fastq files
cp /scratch/ReptileTrinityDYS/RNAmaleStress/Clean_Reads/*.fq.gz .


# Python stript to convert files
cp /scratch/ReptileTrinityDYS/RNAmaleStress/PrepDE.py .
# .gff3 file for annotation
cp /scratch/ReptileTrinityDYS/RNAmaleStress/Sceloporus_undulatus24.gff3 .
# Reference genome
cp /scratch/ReptileTrinityDYS/RNAmaleStress/Sceloporus_genome_funannotate_renamed.fasta .

## Check for corruption while transferring

##Index reference genome
	# hisat2-build <ref fasta> <heading for index files>
## Convert .gff3 to .gtf file
gffread Sceloporus_undulatus24.gff3 -T -o reference.gtf


## Index reference genome
# prefix TCO_index
hisat2-build -f Sceloporus_genome_funannotate_renamed.fasta Male_Rna_index


ls | grep "_paired_threads.fq.gz" |cut -d "_" -f 1,2,3,4,5 | sort | uniq > list



while read i;
do

hisat2 -p 20 --dta -x Male_Rna_index -1 ${i}_1_paired_threads.fq.gz -2 ${i}_2_paired_threads.fq.gz -S ${i}.sam


samtools sort -@ 12 -o ${i}_sorted.bam ${i}.sam

done<list


#remove intermed sam files
rm *.sam

mkdir ballgown

while read i;
do

mkdir ballgown/${i}

stringtie -p 20 -e -B -G reference.gtf -o ballgown/${i}/${i}.gtf ${i}_sorted.bam

done<list


## Convert Ballgown output to generate count files that are readable for edgeR
python PrepDE.py
